# Menu.py
# Rodar: streamlit run Menu.py

from __future__ import annotations
import streamlit as st
import os

# =========================
# Configura√ß√£o da Home
# =========================
st.set_page_config(page_title="Previs√£o & PCP", page_icon="üß≠", layout="wide")

# =========================
# Cabe√ßalho
# =========================
st.title("üß≠ Previs√£o & PCP")
st.subheader("Integra√ß√£o entre Modelos de Previs√£o e Planejamento e Controle da Produ√ß√£o (PCP)")

# =========================
# Texto principal
# =========================
st.markdown("""
### O que √©  
Artefato desenvolvido para **gerar previs√µes de demanda** a partir de modelos **cl√°ssicos e de *Machine Learning***, integrando os resultados √†s ferramentas tradicionais de **PCP**. O sistema tamb√©m possibilita a cria√ß√£o de **dashboards executivos** que auxiliam a **an√°lise de resultados** e a **tomada de decis√£o** de forma simples e visual.

---

### Benef√≠cios  
- **Apoio tecnol√≥gico** para gera√ß√£o de previs√µes consistentes e embasadas em m√©todos validados na literatura.  
- **Integra√ß√£o autom√°tica** entre previs√£o, planejamento (MPS/MRP) e indicadores.  
- **Fluxo cont√≠nuo e intuitivo:**  üßæ **DADOS ‚Üí ü§ñ PREVER ‚Üí üè≠ PLANEJAR**.  

---

### Principais Outputs  
- üìà **Previs√£o de demanda** para os pr√≥ximos **6, 8 ou 12 meses**, identificando automaticamente o modelo mais adequado √† s√©rie temporal.  
- üóìÔ∏è **MPS** (Master Production Schedule) e üß© **MRP** (Material Requirements Planning) interativos.  
- üìä **Dashboards executivos** para visualiza√ß√£o consolidada dos resultados e apoio √† decis√£o.  
""")

st.divider()

# =========================
# Comece agora
# =========================
st.markdown("### Comece agora")
st.markdown(
    "Envie a **s√©rie temporal** do produto que deseja analisar. "
    "O sistema processar√° os dados, executar√° os modelos de previs√£o e gerar√° os planos MPS e MRP."
)

# Caminho da primeira p√°gina (deve existir exatamente assim)
TARGET_PAGE = "pages/01_Upload.py"

# Aviso r√°pido se a p√°gina alvo n√£o existir (evita clique 'morto')
if not os.path.exists(TARGET_PAGE):
    st.warning(f"P√°gina alvo n√£o encontrada: `{TARGET_PAGE}`. Verifique o nome/ caminho do arquivo.")

# Bot√£o principal
col1, _ = st.columns([1, 4])
with col1:
    go = st.button("‚û°Ô∏è Iniciar - Passo 1 (Upload da S√©rie Temporal)", type="primary")

if go:
    try:
        st.switch_page(TARGET_PAGE)  # caminho EXATO para a p√°gina dentro de /pages
    except Exception as e:
        st.info("N√£o foi poss√≠vel redirecionar automaticamente. Use o menu lateral e clique em **Upload**.")
        st.caption(f"(Detalhe t√©cnico: {e})")

# =========================
# Notas importantes
# =========================
# 1) N√£o use st.navigation em nenhum arquivo.
# 2) Deixe st.set_page_config apenas neste Menu.py.
# 3) Garanta estrutura:
#    /SeuProjeto
#      Menu.py
#      /pages
#        01_Upload.py
#        02_Serie_Temporal.py
#        03_Analise_Detalhada.py
#        04_Previsao.py
#        05_MPS.py
# 4) Rode a partir da raiz do projeto: streamlit run Menu.py
